[tool.poetry]
name = "libresvip"
version = "0.0.0"
description = "Universal Converter for Singing Voice Projects"
authors = ["SoulMelody <yjxrtzyx@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
charset-normalizer = "^3.2.0"
loguru = "^0.7.0"
more-itertools = "^9.1.0"
omegaconf = "^2.3.0"
packaging = "^23.1"
platformdirs = "^3.9.1"
portion = "^2.4.1"
pydantic = "^2.0.3"
pydantic-extra-types = "^2.0.0"
pydub = "^0.25.1"
pypinyin = "^0.49.0"
regex = "^2023.6.3"
typer = { extras = ["all"], version = "^0.9.0" }
universal-pathlib = "^0.0.24"
wanakana-python = "^1.2.2"

[tool.poetry.group.ujson]
optional = true
[tool.poetry.group.ujson.dependencies]
ujson = "^5.8.0"

[tool.poetry.group.bike]
optional = true
[tool.poetry.group.bike.dependencies]
pycryptodome = "^3.18.0"
zstandard = "^0.21.0"

[tool.poetry.group.protobuf.dependencies]
pure-protobuf = "^3.0a5"

[tool.poetry.group.midi.dependencies]
mido = "^1.3.0"

[tool.poetry.group.subtitle.dependencies]
srt = "^3.5.3"
ass = "^0.5.4"

[tool.poetry.group.binary.dependencies]
construct-typing = "^0.5.6"

[tool.poetry.group.xml.dependencies]
xsdata = { version = "^23.6" }

[tool.poetry.group.text.dependencies]
textx = "^3.1.1"
jinja2 = "^3.1.2"

[tool.poetry.group.svg.dependencies]
drawsvg = "^2.2.0"

[tool.poetry.group.webui]
optional = true
[tool.poetry.group.webui.dependencies]
nicegui = "^1.3.5"

[tool.poetry.group.desktop]
optional = true
[tool.poetry.group.desktop.dependencies]
pyside6 = ">=6.4.0,!=6.5.0"
qmlease = "^3.0.3"
qtawesome = "^1.2.3"
desktop-notifier = { version = "^3.5.6", markers = "platform_python_implementation == 'CPython'" }
qtinter = "^0.11.0"
httpx = "^0.24.1"

[tool.poetry.group.ffmpeg]
optional = true
[tool.poetry.group.ffmpeg.dependencies]
static-ffmpeg = "^2.5"

[tool.poetry.group.code_gen]
optional = true

[tool.poetry.group.code_gen.dependencies]
xsdata = { extras = ["cli"], version = "^23.6" }
datamodel-code-generator = "^0.21.2"
translate-toolkit = "^3.9.2"
babel = "^2.12.1"


[tool.poetry.group.packaging]
optional = true

[tool.poetry.group.packaging.dependencies]
cx-freeze = "^6.15.4"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-datadir = "^1.4.1"

[tool.poetry.group.linting]
optional = true

[tool.poetry.group.linting.dependencies]
isort = "^5.12.0"
pre-commit = "^3.3.3"
ruff = "^0.0.280"
black = "^23.7.0"
mypy = "^1.4.1"
sourcery = "^1.6.0"
bump-pydantic = "^0.6.0"


[tool.poetry.group.dev.dependencies]
poetry-dynamic-versioning = "^0.25.0"
types-regex = "^2023.6.3.1"
pydub-stubs = "^0.25.1.0"
urllib3 = "<2.0"

[[tool.poetry.source]]
name = "tuna"
url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/"
priority = "default"

[tool.poetry.scripts]
cli = "libresvip.cli.__main__:app"
gui = "libresvip.gui.__main__:run"
web = "libresvip.web.__main__:main"

[tool.poetry-dynamic-versioning]
enable = true
format = "{base}"

[tool.pytest.ini_options]
addopts = "-s -p no:warnings"
testpaths = "tests"

[tool.isort]
line_length = 100
profile = "black"

[tool.ruff]
src = ['libresvip', 'tests']
select = [
  # "ANN", # annotations
  # "B",   # bugbear
  "C4",  # comprehensions
  "E",   # style errors
  "F",   # flakes
  "I",   # import sorting
  "N",   # naming
  "PGH", # pygrep-hooks
  "PLC", # pylint convention
  "PLE", # pylint error
  # "PLR", # pylint refactor
  # "RUF", # Ruff
  "T10", # debugger
  # "UP",  # upgrade
  "W",   # style warnings
  "YTT", # sys.version
]
ignore = [
  "C408", # Unnecessary `dict` call (rewrite as a literal)
  "E402", # Module level import not at top of file
  "E501", # Line too long
  "E731", # Do not assign a lambda expression, use a def
  "N802", # Function name should be lowercase
  "N806", # Variable in function should be lowercase
]
line-length = 100
fix = true

[tool.ruff.isort]
known-first-party = ['libresvip', 'tests']
known-third-party = ['srt']

[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[build-system]
requires = [
  "poetry-core>=1.0.0",
  "poetry-dynamic-versioning",
  "setuptools",
  "wheel",
]
build-backend = "poetry_dynamic_versioning.backend"
