[project]
authors = [{ name = "SoulMelody", email = "yjxrtzyx@gmail.com" }]
license = { text = "MIT" }
requires-python = ">=3.9,<3.12"
dependencies = [
  "ass<1.0.0,>=0.5.4",
  "charset-normalizer<4.0.0,>=3.2.0",
  "construct-typing<1.0.0,>=0.6.2",
  "drawsvg<3.0.0,>=2.3.0",
  "jinja2<4.0.0,>=3.1.2",
  "loguru<1.0.0,>=0.7.0",
  "mido<2.0.0,>=1.3.0",
  "more-itertools<11.0.0,>=10.1.0",
  "omegaconf<3.0.0,>=2.3.0",
  "packaging<24.0,>=23.1",
  "platformdirs<4.0.0,>=3.10.0",
  "portion<3.0.0,>=2.4.1",
  "pure-protobuf<4.0,>=3.0a5",
  "pydantic<3.0.0,>=2.3.0",
  "pydantic-extra-types<3.0.0,>=2.0.0",
  "pymediainfo<7.0.0,>=6.0.1; sys_platform != \"linux\"",
  "pymediainfo-lambda<1.0.0,>=0.0.13; sys_platform == \"linux\"",
  "pypinyin<1.0.0,>=0.49.0",
  "regex<2024.0.0,>=2023.8.8",
  "srt<4.0.0,>=3.5.3",
  "textx<4.0.0,>=3.1.1",
  "typer[all]<1.0.0,>=0.9.0",
  "universal-pathlib<1.0.0,>=0.1.1",
  "wanakana-python<2.0.0,>=1.2.2",
  "xsdata<24.0,>=23.8",
  "zstandard>=0.21.0",
]
name = "libresvip"
version = "0.8.1"
description = "Universal Converter for Singing Voice Projects"
readme = "README.md"

[project.urls]
repository = "https://github.com/SoulMelody/LibreSVIP"

[project.optional-dependencies]

ujson = ["ujson>=5.8.0"]
webui = ["nicegui[native]>=1.3.11"]
desktop = [
  "pyside6>6.5.0",
  "qmlease>=3.0.3",
  "lk-utils<3.0.0,>=2.5.5,!=2.6.0",
  "qtawesome>=1.2.3",
  "qtinter>=0.11.0",
  "httpx>=0.24.1",
  "desktop-notifier>=3.5.6; platform_python_implementation == \"CPython\"",
  "pywin32>=306; sys_platform == \"win32\"",
]

[tool.pdm]
[tool.pdm.dev-dependencies]
typing_stubs = ["types-regex>=2023.8.8.0", "types-ujson>=5.8.0.1"]
code_gen = [
  "datamodel-code-generator>=0.21.4",
  "translate-toolkit>=3.10.0",
  "babel>=2.12.1",
  "xsdata[cli]>=23.8",
]
packaging = ["cx-freeze>=6.15.6"]
test = ["pytest>=7.4.0", "pytest-datadir>=1.4.1"]
linting = [
  "isort>=5.12.0",
  "pre-commit>=3.3.3",
  "ruff>=0.0.285",
  "black>=23.7.0",
  "mypy>=1.5.1",
  "sourcery>=1.8.0",
  "bump-pydantic>=0.6.1",
]

[tool.pdm.build]
includes = []
excludes = ["libresvip/plugins/*/*.po"]

[tool.pdm.scripts]
libresvip-cli = { call = "libresvip.cli.__main__:app" }
libresvip-gui = { call = "libresvip.gui.__main__:run" }
libresvip-web = { call = "libresvip.web.__main__:main" }

[tool.pytest.ini_options]
addopts = "-s -p no:warnings"
testpaths = "tests"

[tool.isort]
line_length = 100
profile = "black"

[tool.ruff]
target-version = "py39"
src = ['libresvip', 'tests']
select = [
  "A",     # builtins
  "ASYNC", # async
  "C4",    # comprehensions
  "E",     # style errors
  "EM",    # error messages
  "EXE",   # executable
  "F",     # flakes
  "G",     # logging
  "I",     # import sorting
  "INT",   # gettext
  "N",     # naming
  "PIE",   # pie
  "PGH",   # pygrep-hooks
  "PLC",   # pylint convention
  "PLE",   # pylint error
  "PT",    # pytest-style
  "PTH",   # pathlib
  "T10",   # debugger
  "T20",   # print
  "TCH",   # type-checking
  "TRY",   # tryceratops
  "W",     # style warnings
  "YTT",   # sys.version
]
ignore = [
  "C408", # Unnecessary `dict` call (rewrite as a literal)
  "E402", # Module level import not at top of file
  "E501", # Line too long
  "E731", # Do not assign a lambda expression, use a def
  "N802", # Function name should be lowercase
  "N806", # Variable in function should be lowercase
]
line-length = 100
fix = true

[tool.ruff.isort]
known-first-party = ['libresvip', 'tests']
known-third-party = ['srt']

[tool.mypy]
plugins = ["pydantic.mypy"]

always_true = "PYSIDE6"
follow_imports = "silent"
disable_error_code = "method-assign,operator,override"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
warn_no_return = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[build-system]
requires = ["pdm-backend", "setuptools", "wheel"]
build-backend = "pdm.backend"
