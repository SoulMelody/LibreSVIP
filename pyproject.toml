[tool.poetry]
name = "libresvip"
version = "0.0.1"
description = "Universal Converter for Singing Voice Projects"
authors = ["SoulMelody <yjxrtzyx@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
charset-normalizer = "^3.1.0"
loguru = "^0.6.0"
omegaconf = "^2.3.0"
portion = "^2.4.0"
pydantic = "^2.0b1"
pydub = "^0.25.1"
pypinyin = "^0.49.0"
regex = "^2023.5.5"
setuptools = "^67.8.0"
typer = { extras = ["all"], version = "^0.9.0" }
wanakana-python = "^1.2.2"
yapsy = "^1.12.2"

[tool.poetry.group.ujson]
optional = true
[tool.poetry.group.ujson.dependencies]
ujson = "^5.7.0"

[tool.poetry.group.bike]
optional = true
[tool.poetry.group.bike.dependencies]
pycryptodome = "^3.18.0"
zstandard = "^0.21.0"

[tool.poetry.group.protobuf.dependencies]
pure-protobuf = "^3.0a5"

[tool.poetry.group.midi.dependencies]
mido = "^1.2.10"

[tool.poetry.group.subtitle.dependencies]
srt = "^3.5.3"
ass = "^0.5.3"

[tool.poetry.group.binary.dependencies]
construct-typing = "^0.5.6"

[tool.poetry.group.xml.dependencies]
xsdata = { version = "^23.5" }

[tool.poetry.group.text.dependencies]
textx = "^3.1.1"
jinja2 = "^3.1.2"

[tool.poetry.group.svg.dependencies]
drawsvg = "^2.1.1"

[tool.poetry.group.webui]
optional = true
[tool.poetry.group.webui.dependencies]
trame = "^2.5.0"
pywebview = "^4.1"

[tool.poetry.group.desktop]
optional = true
[tool.poetry.group.desktop.dependencies]
pyside6 = "!=6.5.0"
qmlease = "^3.0.3"
qtawesome = "^1.2.3"
desktop-notifier = { version = "^3.5.3", markers = "platform_python_implementation == 'CPython'" }
notify-py = { version = "^0.3.42", markers = "platform_python_implementation == 'PyPy'" }

[tool.poetry.group.ffmpeg]
optional = true
[tool.poetry.group.ffmpeg.dependencies]
static-ffmpeg = "^2.5"

[tool.poetry.group.code_gen]
optional = true

[tool.poetry.group.code_gen.dependencies]
xsdata = { extras = ["cli"], version = "^23.5" }
# datamodel-code-generator = "^0.19.0"
translate-toolkit = "^3.9.0"
babel = "^2.12.1"


[tool.poetry.group.packaging]
optional = true

[tool.poetry.group.packaging.dependencies]
cx-freeze = "^6.15.0"
setuptools = { version = "^67.8.0", extras = ["testing-integration"] }


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pytest-datadir = "^1.4.1"


[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
pre-commit = "^3.3.2"
poethepoet = "^0.20.0"
ruff = "^0.0.270"
black = "^23.3.0"
mypy = "^1.3.0"
sourcery = "^1.3.0"

[tool.poe.tasks]
cli.script = "libresvip.cli.__main__:app"
gui.script = "libresvip.gui.__main__:run"
web.script = "libresvip.web.__main__:main"

[tool.pytest.ini_options]
addopts = "-s -p no:warnings"
testpaths = "tests"

[tool.isort]
line_length = 100
profile = "black"

[tool.ruff]
src = ['libresvip', 'tests']
select = [
    # "ANN", # annotations
    # "B",   # bugbear
    "C4",  # comprehensions
    "E",   # style errors
    "F",   # flakes
    "I",   # import sorting
    "N",   # naming
    "PGH", # pygrep-hooks
    "PLC", # pylint convention
    "PLE", # pylint error
    # "PLR", # pylint refactor
    # "RUF", # Ruff
    "T10", # debugger
    # "UP",  # upgrade
    "W",   # style warnings
    "YTT", # sys.version
]
ignore = [
    "C408", # Unnecessary `dict` call (rewrite as a literal)
    "E402", # Module level import not at top of file
    "E501", # Line too long
    "E731", # Do not assign a lambda expression, use a def
    "N802", # Function name should be lowercase
    "N806", # Variable in function should be lowercase
]
line-length = 100
fix = true

[tool.ruff.isort]
known-first-party = ['libresvip', 'tests']

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"
priority = "default"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
