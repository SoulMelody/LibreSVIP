[project]
authors = [{ name = "SoulMelody", email = "yjxrtzyx@gmail.com" }]
license = { text = "MIT" }
requires-python = ">=3.9,<3.13"
classifiers = [
  'Development Status :: 4 - Beta',
  'Programming Language :: Python',
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Intended Audience :: Developers',
  'Intended Audience :: End Users/Desktop',
  'License :: OSI Approved :: MIT License',
  'Environment :: Console',
  'Operating System :: Unix',
  'Operating System :: POSIX :: Linux',
  'Operating System :: Microsoft :: Windows :: Windows 10',
  'Operating System :: Microsoft :: Windows :: Windows 11',
  'Framework :: Pydantic :: 2',
  'Topic :: File Formats',
  'Topic :: Multimedia :: Sound/Audio :: Sound Synthesis',
  'Typing :: Typed',
]
dependencies = [
  "bidict<0.23.2,>=0.23.1",
  "charset-normalizer<4.0.0,>=3.3.2",
  "construct-typing<1.0.0,>=0.6.2",
  "drawsvg<3.0.0,>=2.3.0",
  "importlib-resources<7.0.0,>=6.4.0; python_version < \"3.11\"",
  "jinja2<4.0.0,>=3.1.3",
  "loguru<1.0.0,>=0.7.2",
  "mido-fix<2.0.0,>=1.2.12",
  "more-itertools<11.0.0,>=10.2.0",
  "omegaconf<3.0.0,>=2.3.0",
  "packaging<24.1,>=24.0",
  "parsimonious<0.11.0,>=0.10.0",
  "platformdirs<5.0.0,>=4.2.1",
  "portion<3.0.0,>=2.4.2",
  "proto-plus<2.0.0,>=1.23.0",
  "pydantic<3.0.0,>=2.7.1",
  "pydantic-extra-types<3.0.0,>=2.7.0",
  "pymediainfo<7.0.0,>=6.1.0",
  "pypinyin<1.0.0,>=0.51.0",
  "retrie<1.0.0,>=0.3.1",
  "rich<14.0.0,>=13.7.1",
  "srt<4.0.0,>=3.5.3",
  "typer-slim<1.0.0,>=0.12.3",
  "wanakana-python<2.0.0,>=1.2.2",
  "xsdata<24.5,>=24.4",
  "zhon<3.0.0,>=2.0.2",
  "zstandard<0.23.0,>=0.22.0; platform_python_implementation == \"CPython\"",
  "zstd<2.0.0,>=1.5.5.1; platform_python_implementation == \"PyPy\"",
]
name = "libresvip"
dynamic = ["version"]
description = "Universal Converter for Singing Voice Projects"
readme = "README.md"

[project.urls]
repository = "https://github.com/SoulMelody/LibreSVIP"
documentation = "https://soulmelody.github.io/LibreSVIP"

[project.optional-dependencies]

ujson = ["ujson>=5.9.0"]
upath = [
  "universal-pathlib<1.0.0,>=0.2.2",
]
ruamel_yaml = ["ruamel.yaml>=0.18.6"]
lxml = ["lxml>=5.2.1"]
webui = [
    "nicegui>=1.4.23",
    "pywebview>=5.1",
    "libresvip[upath]",
]
desktop = [
  "pyside6<6.8.0,>=6.6.3.1,!=6.7.0",
  "fonticon-materialdesignicons7>=7.2.96",
  "httpx>=0.27.0",
  "desktop-notifier>=3.5.6; platform_python_implementation == \"CPython\"",
  "libresvip[upath]",
]

[project.scripts]
libresvip-cli = "libresvip.cli.__main__:app"
libresvip-web = "libresvip.web.__main__:main"

[project.gui-scripts]
libresvip-gui = "libresvip.gui.__main__:run"

[tool.pdm]
version = { source = "file", path = "libresvip/__init__.py" }

[tool.pdm.dev-dependencies]
code_gen = [
  "datamodel-code-generator>=0.25.6",
  "gapic-generator>=1.17.0",
  "click-default-group>=1.2.4",
  "docformatter>=1.7.5",
  "toposort>=1.10",
]
i18n = ["translate-toolkit>=3.13.0", "babel>=2.14.0"]
linting = [
  "pre-commit>=3.7.0",
  "ruff>=0.4.2",
  "mypy>=1.10.0",
  "sourcery>=1.16.0",
  "proto-plus-stubs>=0.7.0",
  "types-parsimonious>=0.10.0.20240331",
  "types-pyyaml>=6.0.12.20240311",
  "types-ujson>=5.9.0.0",
  "types-zstd>=1.5.0.20240311; platform_python_implementation == \"PyPy\"",
]
packaging = [
  "cx-Freeze>=7.0.0",
  "nuitka>=2.1.6",
  "pyinstaller>=6.6.0",
  "shellingham<2.0.0,>=1.5.4",
]
docs = ["mkdocs-material<10.0.0,>=9.5.19"]
test = ["pytest>=8.1.1", "pytest-datadir>=1.5.0"]

[tool.pdm.build]
includes = ["libresvip"]
excludes = ["tests", "libresvip/res/qml/**", "libresvip/res/locales/*/LC_MESSAGES/libresvip.po", "libresvip/middlewares/*/*.pot", "libresvip/plugins/*/*.pot", "**/.mypy_cache"]

[tool.pytest.ini_options]
addopts = "-s -p no:warnings"
pythonpath = "."
testpaths = "tests"

[tool.ruff]
target-version = "py39"
src = ['libresvip', 'tests']
line-length = 100
fix = true

[tool.ruff.lint]
select = [
  "A",     # builtins
  "ANN",   # annotations
  "ASYNC", # async
  "C4",    # comprehensions
  "DTZ",   # timezone
  "E",     # style errors
  "EM",    # error messages
  "EXE",   # executable
  "F",     # flakes
  "FLY",   # flynt
  "I",     # import sorting
  "INT",   # gettext
  "N",     # naming
  "PERF",  # perflint
  "PIE",   # assign and return
  "PGH",   # pygrep-hooks
  "PLC",   # pylint convention
  "PT",    # pytest-style
  "PTH",   # pathlib
  "PYI",   # stubs
  "SIM",   # simplify
  "T10",   # debugger
  "T20",   # print
  "TCH",   # type-checking
  "TRY",   # tryceratops
  "UP",    # pyupgrade
  "W",     # style warnings
  "YTT",   # sys.version
]
ignore = [
  "ANN101", # Missing type annotation for `self` in method
  "ANN102", # Missing type annotation for `cls` in classmethod
  "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
  "E501",   # Line too long
  "UP007",  # Use `X | Y` for type annotations
]

[tool.ruff.lint.isort]
known-first-party = ['libresvip', 'tests']
known-third-party = ['srt']

[tool.mypy]
disable_error_code = "attr-defined,import-not-found,operator,return-value,type-abstract,unused-ignore"
allow_redefinition = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
warn_no_return = false
no_site_packages = true
explicit_package_bases = true

[build-system]
requires = ["pdm-backend", "setuptools", "wheel"]
build-backend = "pdm.backend"
