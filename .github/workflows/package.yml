name: Packaging
on:
  push:
    tags:
      - "v*"

jobs:
  make-outputs:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

  release:
    runs-on: ${{ matrix.os.runs-on }}
    needs: [make-outputs]
    strategy:
      matrix:
        os:
          - runs-on: windows-latest
            arch: win-x64
          - runs-on: ubuntu-latest
            arch: linux-x64
          - runs-on: ubuntu-latest
            arch: linux-aarch64
          - runs-on: macos-latest
            arch: osx-x64

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install OS dependencies
        if: matrix.os.runs-on == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1 libmediainfo-dev
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          auto-activate-base: true
          activate-environment: ""
          python-version: "3.11"
      - name: Build with cx_freeze (Windows & Linux)
        if: matrix.os.runs-on != 'macos-latest'
        shell: bash -el {0}
        run: |
          mamba create --file environment.yml
          mamba activate libresvip
          pip install libresvip --no-deps
          cd packaging
          pdm run python setup.py bdist_portable
          cd ..
      - name: Build with cx_freeze (MacOS Intel)
        if: matrix.os.runs-on == 'macos-latest'
        run: |
          mamba create --file environment.yml
          mamba activate libresvip
          pip install libresvip --no-deps
          cd packaging
          pdm run python setup.py bdist_dmg
          mkdir dist
          mv build/LibreSVIP.dmg dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.macos-x86_64.dmg
          cd ..
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-${{ matrix.os.arch }}
          path: ./packaging/dist
      - name: Create Release for Linux x86_64
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.os.runs-on == 'ubuntu-latest' && matrix.os.arch == 'linux-x64'
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.linux-x86_64.tar.gz
      - name: Create Release for Linux aarch64
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.os.runs-on == 'ubuntu-latest' && matrix.os.arch == 'linux-aarch64'
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.linux-aarch64.tar.gz
      - name: Create Release for MacOS Intel
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.os.runs-on == 'macos-latest'
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.macos-x86_64.dmg
      - name: Create Release for Windows
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.os.runs-on == 'windows-latest'
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.win-amd64.zip
