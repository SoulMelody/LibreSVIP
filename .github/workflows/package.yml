name: Packaging
on:
  push:
    tags:
      - "v*"
env:
  PYTHON_VERSION: "3.13.7"
  FLET_PYTHON_VERSION: "3.14.0"

jobs:
  make-outputs:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

  release_windows_amd64:
    runs-on: windows-latest
    needs: [make-outputs]
    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
      - name: Build with pyinstaller
        shell: bash -el {0}
        run: |
          uv venv --python 3.13
          uv build --wheel
          cd packaging
          uv pip install -r requirements-desktop.txt
          uv pip install ../dist/*.whl --no-deps
          uv run pyinstaller libresvip.spec
          cd dist
          7z a LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.win-amd64.7z libresvip
          rm -rf libresvip
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-win-amd64.zip
          path: ./packaging/dist/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.win-amd64.7z

  release_windows_msys2_ucrt64:
    runs-on: windows-latest
    needs: [make-outputs]
    steps:
      - uses: actions/checkout@v5
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            mingw-w64-ucrt-x86_64-python-pip
            mingw-w64-ucrt-x86_64-uv
            p7zip
      - name: Build with pyinstaller
        shell: msys2 {0}
        run: |
          uv build --wheel
          cd packaging
          python mingw_install.py
          python -m pip install ../dist/*.whl --no-deps
          pyinstaller libresvip.spec
          cd dist
          7z a LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.msys2-ucrt64.7z libresvip
          rm -rf libresvip
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-msys2-ucrt64.zip
          path: ./packaging/dist/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.msys2-ucrt64.7z

  release_windows_arm64:
    runs-on: windows-11-arm
    needs: [make-outputs]
    steps:
      - id: mediainfo_version
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: MediaArea/MediaInfo
      - uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
      - name: Build with pyinstaller
        shell: bash -el {0}
        run: |
          uv build --wheel
          uv venv --python cpython-${PYTHON_VERSION}-windows-aarch64-none
          cd dist
          uv pip install *.whl --no-deps
          cd ../packaging
          uv run python download_win_arm64_wheels.py
          uv pip install *.whl --no-deps
          uv run pyinstaller libresvip.spec
          mkdir archive
          cd dist
          curl -O https://mediaarea.net/download/binary/mediainfo-gui/${{ steps.mediainfo_version.outputs.release }}/MediaInfo_GUI_${{ steps.mediainfo_version.outputs.release }}_Windows_ARM64_WithoutInstaller.7z
          7z x MediaInfo_GUI_${{ steps.mediainfo_version.outputs.release }}_Windows_ARM64_WithoutInstaller.7z
          mkdir -p libresvip/_internal/pymediainfo
          cp MediaInfo.dll libresvip/_internal/pymediainfo
          7z a ../archive/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.win-arm64.7z libresvip
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-win-arm64.zip
          path: ./packaging/archive/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/archive/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.win-arm64.7z

  release_linux_x86_64:
    runs-on: ubuntu-latest
    needs: [make-outputs]
    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1
      - name: Build with pyinstaller
        run: |
          uv build --wheel
          uv venv --python 3.13
          cd packaging
          uv pip install -r requirements-desktop.txt
          uv pip install ../dist/*.whl --no-deps
          uv run pyinstaller libresvip.spec
          cd dist
          tar -czvf LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.linux-x86_64.tar.gz libresvip
          rm -rf libresvip
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-linux-x86_64.zip
          path: ./packaging/dist/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.linux-x86_64.tar.gz

  release_linux_aarch64:
    runs-on: ubuntu-24.04-arm
    needs: [make-outputs]
    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y binutils curl libdouble-conversion3 libfreetype6 libfontconfig1 libegl1 libgl1 libglib2.0-0 libtiff6 libwayland-dev libwebp7 libwebpdemux2 libwebpmux3 libxt6
      - name: Build with pyinstaller
        run: |
          uv build --wheel
          uv venv --python 3.13
          cd packaging
          uv pip install -r requirements-desktop.txt
          uv pip install ../dist/*.whl --no-deps
          uv run pyinstaller libresvip.spec
          cd dist
          tar -czvf LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.linux-aarch64.tar.gz libresvip
          rm -rf libresvip
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-linux-aarch64.zip
          path: ./packaging/dist/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.linux-aarch64.tar.gz

  release_macos_x86_64:
    runs-on: macos-latest
    needs: [make-outputs]
    steps:
      - uses: actions/checkout@v5
      - name: Install Rosetta
        shell: bash
        run: |
          softwareupdate --install-rosetta --agree-to-license
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
      - name: Build with pyinstaller
        run: |
          uv build --wheel
          uv venv --python cpython-${PYTHON_VERSION}-macos-x86_64-none
          cd packaging
          uv pip install -r requirements-desktop.txt
          uv pip install ../dist/*.whl --no-deps
          uv run python -m PyInstaller libresvip.spec
          brew install create-dmg
          create-dmg --volname "LibreSVIP" dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.macos-x86_64.dmg ./dist/LibreSVIP.app
          rm -rf ./dist/LibreSVIP.app
          cd ..
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-macos-x86_64.zip
          path: ./packaging/dist/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.macos-x86_64.dmg

  release_macos_arm64:
    runs-on: macos-latest
    needs: [make-outputs]
    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
      - name: Build with pyinstaller
        run: |
          uv build --wheel
          uv venv --python 3.13
          cd packaging
          uv pip install -r requirements-desktop.txt
          uv pip install ../dist/*.whl --no-deps
          uv run python -m PyInstaller libresvip.spec
          brew install create-dmg
          create-dmg --volname "LibreSVIP" dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.macos-arm64.dmg ./dist/LibreSVIP.app
          rm -rf ./dist/LibreSVIP.app
          cd ..
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-macos-arm64.zip
          path: ./packaging/dist/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.macos-arm64.dmg

  release_apk:
    runs-on: ubuntu-latest
    needs: [make-outputs]

    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"

      - name: Install Python Dependencies
        run: |
          uv build --wheel
          uv venv --python 3.12
          uv sync --extra mobile
          uv run python -m ensurepip --upgrade
      - name: Setup Android SDK
        # https://github.com/android-actions/setup-android
        uses: android-actions/setup-android@v3
        with:
          packages: "build-tools;29.0.3"

      - name: Flet Build APK
        run: |
          cd packaging
          bash install_mobile_requirements.sh android_24_arm64_v8a arm64-v8a
          bash install_mobile_requirements.sh android_24_armeabi_v7a armeabi-v7a
          bash install_mobile_requirements.sh android_24_x86_64 x86_64
          bash build_apk.sh
          mv build/apk/app-release.apk build/apk/LibreSVIP-${{ needs.make-outputs.outputs.VERSION }}.apk
          cd ..

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: ./packaging/build/apk
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ${{steps.sign_app.outputs.signedReleaseFile}}

  release_mobile_win32:
    runs-on: windows-latest
    needs: [make-outputs]
    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
      - name: Build with pyinstaller
        shell: bash -el {0}
        run: |
          uv venv --python cpython-${FLET_PYTHON_VERSION}-windows-x86-none
          uv sync --extra mobile --extra crypto --extra ujson --extra ruamel_yaml --extra lxml --extra zstd
          cd packaging
          uv pip install -r requirements-pyinstaller.in
          uv run pyinstaller libresvip-mobile.spec
          cd dist
          7z a LibreSVIP-mobile-${{ needs.make-outputs.outputs.VERSION }}.win32.7z libresvip-mobile
          rm -rf libresvip-mobile
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-mobile-win32.zip
          path: ./packaging/dist/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-mobile-${{ needs.make-outputs.outputs.VERSION }}.win32.7z

  release_mobile_win_amd64_ft:
    runs-on: windows-latest
    needs: [make-outputs]
    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
      - name: Build with pyinstaller
        shell: bash -el {0}
        run: |
          uv venv --python cpython-${FLET_PYTHON_VERSION}+freethreaded-windows-x86_64-none
          uv sync --extra mobile --extra crypto --extra ujson --extra lxml --extra zstd
          cd packaging
          uv pip install -r requirements-pyinstaller.in
          uv run pyinstaller libresvip-mobile.spec
          cd dist
          7z a LibreSVIP-mobile-${{ needs.make-outputs.outputs.VERSION }}.win64-free_threaded.7z libresvip-mobile
          rm -rf libresvip-mobile
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libresvip-mobile-win64-free_threaded.zip
          path: ./packaging/dist/
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ needs.make-outputs.outputs.VERSION }}
          files: |
            ./packaging/dist/LibreSVIP-mobile-${{ needs.make-outputs.outputs.VERSION }}.win64-free_threaded.7z

